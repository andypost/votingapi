<?php
// $Id$

/**
 * @file
 * A debugging tool for VotingAPI.
 */

function votingapi_debug_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Prints out debugging information when various VotingAPI hooks are called.');
      break;
  } 
}


/*************
 * CRUD hooks
 *************/

function votingapi_debug_votingapi_load($vote) {
  drupal_set_message("HOOK_VOTINGAPI_LOAD: A vote for $vote->content_type $vote->content_id is being loaded. Modules that need to modify votes dynamically can do so here.");
}

function votingapi_debug_votingapi_insert($vote) {
  drupal_set_message("HOOK_VOTINGAPI_INSERT: A vote for $vote->content_type $vote->content_id was cast with the tag '$vote->tag' and the value $vote->value. Modules that need very fine-grain data about what votes are being cast can pick up the information here.");
}

function votingapi_debug_votingapi_update($vote, $new_value) {
  drupal_set_message("HOOK_VOTINGAPI_UPDATE: A vote for $vote->content_type $vote->content_id was updated from $vote->value to $new_value. Modules that need very fine-grain data about what votes are being cast can pick up the information here.");
}

function votingapi_debug_votingapi_delete($vote) {
  // Once a vote arrives here, it's already been deleted from the database.
  drupal_set_message("HOOK_VOTINGAPI_DELETE: A vote for $vote->content_type $vote->content_id was deleted. Modules that need very fine-grain data about what votes are being cast can pick up the information here.");
}


/*************************
 * Vote Calculation hooks
 *************************/

function votingapi_debug_votingapi_calculate(&$results, $votes, $content_type, $content_id) {
  drupal_set_message("HOOK_VOTINGAPI_CALCULATE: The results of all " . count($votes) . " votes for $content_type $content_id are being totaled. Modules can examine the votes cast and add or remove data from the results here.");
}

function votingapi_debug_votingapi_results($results, $votes, $content_type, $content_id) {
  drupal_set_message("HOOK_VOTINGAPI_RESULTS: The results of all " . count($votes) . " votes for $content_type $content_id have been totaled.  " . count($results) . " result records were saved. Modules that respond to votes should do their work here.");
}


/*************************
 * Vote Calculation hooks
 *************************/
 
function votingapi_debug_votingapi_format($vote, $field) {
  drupal_set_message("HOOK_VOTINGAPI_FORMAT: A module requested a human-readable version of the '$field' field for vote $vote->vote_id, on $content_type $content_id. Modules that present percentages as 1-n scales, or use custom value types, should use implement this function.");
}

function votingapi_debug_votingapi_action_sets() {
  drupal_set_message("HOOK_VOTINGAPI_ACTION_SETS: VotingAPI is building its list of Action Sets. Modules that need to initiate actions (like promoting nodes) based on vote results can return sets of criteria and actions here.");
}
